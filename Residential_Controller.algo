'---------------------- BUTTON CALL ELEVATOR-------------------------------
SEQUENCE call_Elevator USING direction AND requested_floor
    CALL Call_buttons WITH direction AND requested_floor RETURNING requested_floor
    CALL find_elevator WITH direction AND requested_floor RETURNING elevator
    CALL move with direction AND requested_floor AND elevator
END SEQUENCE
'---------------------- FIND CALL BUTTON'-------------------------------
SEQUENCE call_button USING direction AND requested_floor
        SET call_button TO direction AND requested_floor
        ADD requested_floor TO elevator_queue
            return requested_floor
    END FOR
END SEQUENCE
'---------------------- FIND ELEVATOR -------------------------------
SEQUENCE find_elevator USING direction AND requested_floor
    FOR EACH elevator in elevator_list

        IF requested_floor = elevator_floor AND elevator_not_busy THEN
            RETURN elevator

        ELSE IF requested_floor = elevator_floor AND direction = elevator_direction THEN
            RETURN elevator

        ELSE IF requested_floor > elevator_floor AND elevator is moving in same direction THEN
            CALL nearest_elevator WITH  requested_floor AND direction RETURNING nearest_elevator
                RETURN nearest_elevator

        ELSE IF requested_floor < elevator_floor AND elevator is moving in same direction THEN
            CALL nearest_elevator WITH  requested_floor AND direction RETURNING nearest_elevator
                RETURN nearest_elevator

        ELSE IF requested_floor > elevator_floor THEN
            CALL nearest_elevator WITH requested_floor AND direction RETURNING nearest_elevator
                RETURN nearest_elevator

        ELSE IF requested_floor < elevator_floor THEN
             CALL nearest_elevator WITH requested_floor AND direction RETURNING nearest_elevator
                RETURN nearest_elevator

        ELSE elevator_not_busy THEN
            CALL nearest_elevator WITH requested_floor AND direction RETURNING nearest_elevator
                RETURN elevator

        END IF
    END EACH
END SEQUENCE

'---------------------- NEAREST ELEVATOR -------------------------------
SEQUENCE nearest_elevator WITH requested_floor AND direction 
    CALCULATE difference between requested_floor AND elevator_floor
RETURN nearest_elevator

'---------------------- DOORS -------------------------------
SEQUENCE door USING elevator AND requested_floor
    SET door TO open THEN
    SET timer TO 5 seconds THEN

    IF no obstruction THEN
    CALL close_door

    ELSE IF obstruction THEN
    SET timer TO 5 seconds THEN
    SET door TO close
END SEQUENCE

'---------------------- MOVE ELEVATOR -------------------------------
SEQUENCE move USING direction AND requested_floor
    
    IF elevator_floor LESS THAN requested_floor THEN
    REPEAT

    INCREMENT elevator_floor by 1
    UNTIL elevator_floor EQUAL to floor

    ELSE IF elevator_floor GREATER THAN requested_floor THEN
    REPEAT

    INCREMENT elevator_floor by - 1
    UNTIL elevator_floor EQUAL to requested_floor

    CALL door WITH elevator AND requested_floor  RETURNING door_open
    
    END IF
END SEQUENCE

'---------------------- FLOOR BUTTONS INSIDE ELEVATOR ------------------------------------
SEQUENCE floor_buttons USING direction AND requested_floor
    CALL find_floor_buttons WITH direction AND requested_floor RETURNING find_floor_buttons

SEQUENCE find_floor_buttons WITH direction AND requested_floor
    FOR EACH CallButton IN CallButtons
        return find_floor_buttons
END SEQUENCE

'---------------------- OVER WEIGHT WARNING -------------------------------

SEQUENCE weight_check USING elevator
  READ weight FROM weight sensor
  IF weight is > Than maximum weight THEN
  CALL door WITH elevator AND requested_floor
  DISPLAY overweight warning signal 
  UNTIL weight is < Than maximum weight THEN 
  CALL door WITH elevator AND requested_floor

END SEQUENCE
