'---------------------- BUTTON CALL ELEVATOR-------------------------------
SEQUENCE call_Elevator USING direction AND requested_floor
    CALL call_button WITH direction AND requested_floor #ING requested_floor
    CALL find_column WITH direction AND requested_floor RETURNING column
    CALL find_elevator WITH column AND direction AND requested_floor RETURNING elevator
    CALL move with direction AND requested_floor
END SEQUENCE

'---------------------- FIND CALL BUTTON'-------------------------------
SEQUENCE call_button USING direction AND requested_floor
        SET call_button TO direction AND requested_floor
        ADD requested_floor TO elevator_queue
            return requested_floor
    END FOR
END SEQUENCE

'---------------------- FIND COLUMN -------------------------------
SEQUENCE find_column USING elevator_floor AND requested_floor

  total_floor - total_basement / (total_column - 1) = average floor per column


' wich floor every column serve '
  WHILE x = 1, x IS < number of column
    'the columns maximum floor to reach is equal to 1 * average floor per column'
    column number maximum floor to reach = x * average floor per column
    
    'the columns minimum floor to reach is equal to the last maximum floor to reach - average floor per column'
    column number minimun floor to reach = maximum - average floor per column
    
    'x from the while loop is +=1 everytime'
    x += 1
    
      RETURN column
    
  END WHILE
END SEQUENCE

'---------------------- FIND ELEVATOR -------------------------------
SEQUENCE find_elevator USING column AND direction AND requested_floor

  FOR EACH elevator in elevator_list

    IF requested_floor = elevator_floor AND elevator_not_busy THEN
      RETURN elevator

    ELSE IF requested_floor = elevator_floor AND direction = elevator_direction THEN
      RETURN elevator

    ELSE IF requested_floor > elevator_floor AND elevator is moving in same direction THEN
      CALL nearest_elevator WITH  requested_floor AND direction RETURNING nearest_elevator
          RETURN nearest_elevator

      ELSE IF requested_floor < elevator_floor AND elevator is moving in same direction THEN
        CALL nearest_elevator WITH  requested_floor AND direction RETURNING nearest_elevator
          RETURN nearest_elevator

      ELSE IF requested_floor > elevator_floor THEN
        CALL nearest_elevator WITH requested_floor AND direction RETURNING nearest_elevator
          RETURN nearest_elevator

      ELSE IF requested_floor < elevator_floor THEN
        CALL nearest_elevator WITH requested_floor AND direction RETURNING nearest_elevator
           RETURN nearest_elevator

      ELSE elevator_not_busy THEN
        CALL nearest_elevator WITH requested_floor AND direction
           RETURN elevator

        END IF
    END EACH
END SEQUENCE

'---------------------- NEAREST ELEVATOR -------------------------------
SEQUENCE nearest_elevator WITH requested_floor AND direction 
    CALCULATE difference between requested_floor AND elevator_floor
RETURN nearest_elevator
'---------------------- DOORS -------------------------------
SEQUENCE door USING elevator AND requested_floor
    SET door TO open

    IF door is open THEN
    SET timer TO 5 seconds THEN

    IF no obstruction THEN
    CALL close_door

    IF obstruction THEN
    SET timer TO 5 seconds THEN
    SET door TO close
    RETURN door_activation
END SEQUENCE

'---------------------- MOVE ELEVATOR -------------------------------
SEQUENCE move USING direction AND requested_floor
    
    IF elevator_floor LESS THAN requested_floor THEN
    REPEAT

    INCREMENT elevator_floor by 1
    UNTIL elevator_floor EQUAL to floor

    ELSE IF elevator_floor GREATER THAN requested_floor THEN
    REPEAT

    INCREMENT elevator_floor by - 1
    UNTIL elevator_floor EQUAL to requested_floor

    CALL door WITH elevator AND requested_floor RETURNING door_activation

    END IF
END SEQUENCE